// <auto-generated />
using System;
using EmlakOtomasyonu.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmlakOtomasyonu.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250511065005_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmlakOtomasyonu.Models.AdminTablosu", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("adminID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("AdminAd")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .HasColumnName("adminAd")
                        .IsFixedLength();

                    b.Property<string>("AdminKullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminSifre")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .HasColumnName("adminSifre")
                        .IsFixedLength();

                    b.Property<string>("AdminSoyad")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .HasColumnName("adminSoyad")
                        .IsFixedLength();

                    b.HasKey("AdminId");

                    b.ToTable("Admin_Tablosu", (string)null);
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.DisOzellikTablosu", b =>
                {
                    b.Property<int>("DoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("doID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoId"));

                    b.Property<bool>("DoGuvenlik")
                        .HasColumnType("bit")
                        .HasColumnName("doGuvenlik");

                    b.Property<bool>("DoKapici")
                        .HasColumnType("bit")
                        .HasColumnName("doKapici");

                    b.Property<bool>("DoOtopark")
                        .HasColumnType("bit")
                        .HasColumnName("doOtopark");

                    b.Property<bool>("DoOyunParkı")
                        .HasColumnType("bit")
                        .HasColumnName("doOyunParkı");

                    b.Property<int>("IlanId")
                        .HasColumnType("int")
                        .HasColumnName("ilanID");

                    b.HasKey("DoId");

                    b.HasIndex("IlanId")
                        .IsUnique();

                    b.ToTable("Dis_Ozellik_Tablosu", (string)null);
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.IlanDetayTablosu", b =>
                {
                    b.Property<int>("IlanDetayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ilanDetayID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlanDetayId"));

                    b.Property<string>("IdBinaIsıtma")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("idBinaIsıtma")
                        .IsFixedLength();

                    b.Property<int?>("IdBinaKacinciKat")
                        .HasColumnType("int")
                        .HasColumnName("idBinaKacinciKat");

                    b.Property<int?>("IdBinaKatSayisi")
                        .HasColumnType("int")
                        .HasColumnName("idBinaKatSayisi");

                    b.Property<int?>("IdBinaYasi")
                        .HasColumnType("int")
                        .HasColumnName("idBinaYasi");

                    b.Property<bool?>("IdEsyaliMi")
                        .HasColumnType("bit")
                        .HasColumnName("idEsyaliMi");

                    b.Property<int?>("IdOdaSayisi")
                        .HasColumnType("int")
                        .HasColumnName("idOdaSayisi");

                    b.Property<int?>("IdSalonSayisi")
                        .HasColumnType("int")
                        .HasColumnName("idSalonSayisi");

                    b.Property<int>("IlanId")
                        .HasColumnType("int")
                        .HasColumnName("ilanID");

                    b.Property<int?>("IlanTablosuIlanId")
                        .HasColumnType("int");

                    b.HasKey("IlanDetayId");

                    b.HasIndex("IlanId")
                        .IsUnique();

                    b.HasIndex("IlanTablosuIlanId");

                    b.ToTable("Ilan_Detay_Tablosu", (string)null);
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.IlanTablosu", b =>
                {
                    b.Property<int>("IlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ilanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlanId"));

                    b.Property<string>("IlanAciklama")
                        .HasMaxLength(1000)
                        .HasColumnType("nchar(1000)")
                        .HasColumnName("ilanAçıklama")
                        .IsFixedLength();

                    b.Property<string>("IlanBaslik")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("ilanBaslık")
                        .IsFixedLength();

                    b.Property<int?>("IlanFiyat")
                        .HasColumnType("int")
                        .HasColumnName("ilanFiyat");

                    b.Property<int>("IlanIslemId")
                        .HasColumnType("int")
                        .HasColumnName("ilanİslemID");

                    b.Property<int>("IlanKategoriId")
                        .HasColumnType("int")
                        .HasColumnName("ilanKategoriID");

                    b.Property<DateTime?>("IlanTarih")
                        .HasColumnType("datetime")
                        .HasColumnName("ilanTarih");

                    b.Property<string>("IlanVitrin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ilanVitrin");

                    b.Property<string>("IlanVresim")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnName("ilanVResim")
                        .IsFixedLength();

                    b.HasKey("IlanId");

                    b.HasIndex("IlanIslemId");

                    b.HasIndex("IlanKategoriId");

                    b.ToTable("Ilan_Tablosu", (string)null);
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.IslemTablosu", b =>
                {
                    b.Property<int>("IlanIslemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ilanIslemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlanIslemId"));

                    b.Property<string>("IslemAd")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("islemAd")
                        .IsFixedLength();

                    b.HasKey("IlanIslemId");

                    b.ToTable("Islem_Tablosu", (string)null);
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.KategoriTablosu", b =>
                {
                    b.Property<int?>("IlanKategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ilanKategoriID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("IlanKategoriId"));

                    b.Property<string>("KategoriAd")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("kategoriAd")
                        .IsFixedLength();

                    b.HasKey("IlanKategoriId");

                    b.ToTable("Kategori_Tablosu", (string)null);
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.ResimTablosu", b =>
                {
                    b.Property<int>("ResimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("resimID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResimId"));

                    b.Property<int?>("IlanId")
                        .HasColumnType("int")
                        .HasColumnName("ilanID");

                    b.Property<string>("ResimAd")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("resimAd")
                        .IsFixedLength();

                    b.Property<string>("ResimResim")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("resimResim")
                        .IsFixedLength();

                    b.HasKey("ResimId");

                    b.HasIndex("IlanId");

                    b.ToTable("Resim_Tablosu", (string)null);
                });

            modelBuilder.Entity("IcOzellikTablosu", b =>
                {
                    b.Property<int>("IoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IoID"));

                    b.Property<int>("IlanID")
                        .HasColumnType("int")
                        .HasColumnName("ilanID");

                    b.Property<bool>("IoAsansor")
                        .HasColumnType("bit")
                        .HasColumnName("ioAsansor");

                    b.Property<bool>("IoDusKabini")
                        .HasColumnType("bit")
                        .HasColumnName("ioDusKabini");

                    b.Property<bool>("IoMobilyaTakimi")
                        .HasColumnType("bit")
                        .HasColumnName("ioMobilyaTakımı");

                    b.Property<bool>("IoSomine")
                        .HasColumnType("bit")
                        .HasColumnName("ioSomine");

                    b.HasKey("IoID");

                    b.HasIndex("IlanID")
                        .IsUnique();

                    b.ToTable("Ic_Ozellik_Tablosu", (string)null);
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.DisOzellikTablosu", b =>
                {
                    b.HasOne("EmlakOtomasyonu.Models.IlanTablosu", "Ilan")
                        .WithOne("DisOzellik")
                        .HasForeignKey("EmlakOtomasyonu.Models.DisOzellikTablosu", "IlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Dis_Ozellik_Tablosu_Ilan_Tablosu");

                    b.Navigation("Ilan");
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.IlanDetayTablosu", b =>
                {
                    b.HasOne("EmlakOtomasyonu.Models.IlanTablosu", "Ilan")
                        .WithOne("IlanDetay")
                        .HasForeignKey("EmlakOtomasyonu.Models.IlanDetayTablosu", "IlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Ilan_Detay_Tablosu_Ilan_Tablosu");

                    b.HasOne("EmlakOtomasyonu.Models.IlanTablosu", null)
                        .WithMany("IlanDetayTablosus")
                        .HasForeignKey("IlanTablosuIlanId");

                    b.Navigation("Ilan");
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.IlanTablosu", b =>
                {
                    b.HasOne("EmlakOtomasyonu.Models.IslemTablosu", "IlanIslem")
                        .WithMany("IlanTablosus")
                        .HasForeignKey("IlanIslemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Ilan_Tablosu_Islem_Tablosu");

                    b.HasOne("EmlakOtomasyonu.Models.KategoriTablosu", "IlanKategori")
                        .WithMany("IlanTablosus")
                        .HasForeignKey("IlanKategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Ilan_Tablosu_Kategori_Tablosu");

                    b.Navigation("IlanIslem");

                    b.Navigation("IlanKategori");
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.ResimTablosu", b =>
                {
                    b.HasOne("EmlakOtomasyonu.Models.IlanTablosu", "Ilan")
                        .WithMany("ResimTablosus")
                        .HasForeignKey("IlanId")
                        .HasConstraintName("FK_Resim_Tablosu_Ilan_Tablosu");

                    b.Navigation("Ilan");
                });

            modelBuilder.Entity("IcOzellikTablosu", b =>
                {
                    b.HasOne("EmlakOtomasyonu.Models.IlanTablosu", "Ilan")
                        .WithOne("IcOzellik")
                        .HasForeignKey("IcOzellikTablosu", "IlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Ic_Ozellik_Tablosu_Ilan_Tablosu");

                    b.Navigation("Ilan");
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.IlanTablosu", b =>
                {
                    b.Navigation("DisOzellik");

                    b.Navigation("IcOzellik");

                    b.Navigation("IlanDetay");

                    b.Navigation("IlanDetayTablosus");

                    b.Navigation("ResimTablosus");
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.IslemTablosu", b =>
                {
                    b.Navigation("IlanTablosus");
                });

            modelBuilder.Entity("EmlakOtomasyonu.Models.KategoriTablosu", b =>
                {
                    b.Navigation("IlanTablosus");
                });
#pragma warning restore 612, 618
        }
    }
}
